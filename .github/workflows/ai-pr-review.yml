name: AI PR Review Summary

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  summarize:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout PR code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Get PR Diff
      - name: Get PR Diff
        env:
          GITHUB_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
        run: |
          echo "Fetching PR diff for PR #${{ github.event.pull_request.number }}"
          curl -s -H "Accept: application/vnd.github.v3.diff" \
               -H "Authorization: token $GITHUB_TOKEN" \
               "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" > pr_diff.txt

      # 3Ô∏è‚É£ Generate AI Summary using OpenAI
      - name: Generate AI Summary
        id: ai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Generating AI-based PR summary..."
          SUMMARY=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [
                {\"role\": \"system\", \"content\": \"You are a senior Flutter developer and code reviewer. Provide a concise PR review summary.\"},
                {\"role\": \"user\", \"content\": \"Summarize this PR based on the following diff:\n\n$(cat pr_diff.txt | sed 's/\"/\\\"/g')\"}
              ]
            }" | jq -r '.choices[0].message.content')

          echo "----- AI Generated Summary -----"
          echo "$SUMMARY"
          echo "----- End of Summary -----"

          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 4Ô∏è‚É£ Post AI Summary as PR Comment
      - name: Post AI Summary as Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PR_COMMENT_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### ü§ñ AI PR Review Summary\n\n${{ steps.ai.outputs.summary }}`
            })
