name: AI PR Review Summary

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  summarize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check PR_COMMENT_TOKEN
        run: |
          if [ -z "${{ secrets.PR_COMMENT_TOKEN }}" ]; then
            echo "❌ PR_COMMENT_TOKEN secret is missing."
            exit 1
          else
            echo "✅ PR_COMMENT_TOKEN is set."
          fi

      - name: Get PR Diff
        env:
          GITHUB_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
        run: |
          echo "Fetching PR diff..."
          curl -s -H "Accept: application/vnd.github.v3.diff" \
               -H "Authorization: token $GITHUB_TOKEN" \
               "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" > pr_diff.txt

          echo "----- PR Diff (Preview) -----"
          head -n 50 pr_diff.txt
          echo "-----------------------------"

          # Encode to Base64 for safe JSON transfer
          base64 pr_diff.txt > pr_diff_base64.txt

      - name: Generate AI Summary with Gemini
        id: ai
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "Generating summary..."
          DIFF=$(cat pr_diff_base64.txt)

          RESPONSE=$(curl -s -X POST \
            "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=$GEMINI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"contents\": [
                {
                  \"parts\": [
                    {\"text\": \"Summarize this pull request. The diff (base64 encoded) is:\n$DIFF\"}
                  ]
                }
              ]
            }")

          echo "----- 🤖 RAW GEMINI RESPONSE -----"
          echo "$RESPONSE"

          SUMMARY=$(echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text')
          echo "----- AI Generated Summary -----"
          echo "$SUMMARY"

          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post Summary as PR Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PR_COMMENT_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### 🤖 AI PR Review Summary\n\n${{ steps.ai.outputs.summary }}`
            })
